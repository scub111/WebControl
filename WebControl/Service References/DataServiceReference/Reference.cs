//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18063
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace WebControl.DataServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemSql", Namespace="http://schemas.datacontract.org/2004/07/WcfDataService")]
    public partial class ItemSql : WebControl.DataServiceReference.ItemSqlSimple {
        
        private string DataNameField;
        
        private short DataTypeField;
        
        private string DescriptionField;
        
        private string FormatValueField;
        
        private double MaxValueField;
        
        private double MinValueField;
        
        private int TimeOutField;
        
        private bool TrendField;
        
        private string UnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataName {
            get {
                return this.DataNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DataNameField, value) != true)) {
                    this.DataNameField = value;
                    this.RaisePropertyChanged("DataName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((this.DataTypeField.Equals(value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatValue {
            get {
                return this.FormatValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatValueField, value) != true)) {
                    this.FormatValueField = value;
                    this.RaisePropertyChanged("FormatValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((this.MaxValueField.Equals(value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((this.MinValueField.Equals(value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeOut {
            get {
                return this.TimeOutField;
            }
            set {
                if ((this.TimeOutField.Equals(value) != true)) {
                    this.TimeOutField = value;
                    this.RaisePropertyChanged("TimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Trend {
            get {
                return this.TrendField;
            }
            set {
                if ((this.TrendField.Equals(value) != true)) {
                    this.TrendField = value;
                    this.RaisePropertyChanged("Trend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemSqlTrend", Namespace="http://schemas.datacontract.org/2004/07/WcfDataService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebControl.DataServiceReference.ItemSqlSimple))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebControl.DataServiceReference.ItemSql))]
    public partial class ItemSqlTrend : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double DataValueField;
        
        private System.DateTime SqlTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DataValue {
            get {
                return this.DataValueField;
            }
            set {
                if ((this.DataValueField.Equals(value) != true)) {
                    this.DataValueField = value;
                    this.RaisePropertyChanged("DataValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SqlTime {
            get {
                return this.SqlTimeField;
            }
            set {
                if ((this.SqlTimeField.Equals(value) != true)) {
                    this.SqlTimeField = value;
                    this.RaisePropertyChanged("SqlTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemSqlSimple", Namespace="http://schemas.datacontract.org/2004/07/WcfDataService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebControl.DataServiceReference.ItemSql))]
    public partial class ItemSqlSimple : WebControl.DataServiceReference.ItemSqlTrend {
        
        private System.DateTime DeviceTimeField;
        
        private short QualityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeviceTime {
            get {
                return this.DeviceTimeField;
            }
            set {
                if ((this.DeviceTimeField.Equals(value) != true)) {
                    this.DeviceTimeField = value;
                    this.RaisePropertyChanged("DeviceTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemSqlTrends", Namespace="http://schemas.datacontract.org/2004/07/WcfDataService")]
    public partial class ItemSqlTrends : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double MaxValueField;
        
        private double MinValueField;
        
        private System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlTrend> RecordsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((this.MaxValueField.Equals(value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((this.MinValueField.Equals(value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlTrend> Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordsField, value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TIDELOGEx", Namespace="http://schemas.datacontract.org/2004/07/WcfDataService")]
    public partial class TIDELOGEx : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CarField;
        
        private int IDField;
        
        private string KMAZSField;
        
        private double LitersField;
        
        private string OperatorField;
        
        private System.DateTime SqlTimeField;
        
        private System.DateTime TDTimeField;
        
        private double TankDensityField;
        
        private double TankLevelField;
        
        private double TankTemperatureField;
        
        private System.DateTime TankTimeField;
        
        private double TankVolumeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KMAZS {
            get {
                return this.KMAZSField;
            }
            set {
                if ((object.ReferenceEquals(this.KMAZSField, value) != true)) {
                    this.KMAZSField = value;
                    this.RaisePropertyChanged("KMAZS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Liters {
            get {
                return this.LitersField;
            }
            set {
                if ((this.LitersField.Equals(value) != true)) {
                    this.LitersField = value;
                    this.RaisePropertyChanged("Liters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SqlTime {
            get {
                return this.SqlTimeField;
            }
            set {
                if ((this.SqlTimeField.Equals(value) != true)) {
                    this.SqlTimeField = value;
                    this.RaisePropertyChanged("SqlTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TDTime {
            get {
                return this.TDTimeField;
            }
            set {
                if ((this.TDTimeField.Equals(value) != true)) {
                    this.TDTimeField = value;
                    this.RaisePropertyChanged("TDTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TankDensity {
            get {
                return this.TankDensityField;
            }
            set {
                if ((this.TankDensityField.Equals(value) != true)) {
                    this.TankDensityField = value;
                    this.RaisePropertyChanged("TankDensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TankLevel {
            get {
                return this.TankLevelField;
            }
            set {
                if ((this.TankLevelField.Equals(value) != true)) {
                    this.TankLevelField = value;
                    this.RaisePropertyChanged("TankLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TankTemperature {
            get {
                return this.TankTemperatureField;
            }
            set {
                if ((this.TankTemperatureField.Equals(value) != true)) {
                    this.TankTemperatureField = value;
                    this.RaisePropertyChanged("TankTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TankTime {
            get {
                return this.TankTimeField;
            }
            set {
                if ((this.TankTimeField.Equals(value) != true)) {
                    this.TankTimeField = value;
                    this.RaisePropertyChanged("TankTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TankVolume {
            get {
                return this.TankVolumeField;
            }
            set {
                if ((this.TankVolumeField.Equals(value) != true)) {
                    this.TankVolumeField = value;
                    this.RaisePropertyChanged("TankVolume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataServiceReference.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/GetItemsFull", ReplyAction="http://tempuri.org/IDataService/GetItemsFullResponse")]
        System.IAsyncResult BeginGetItemsFull(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSql> EndGetItemsFull(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/GetItemsShort", ReplyAction="http://tempuri.org/IDataService/GetItemsShortResponse")]
        System.IAsyncResult BeginGetItemsShort(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> EndGetItemsShort(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/GetItemsShortByDataNames", ReplyAction="http://tempuri.org/IDataService/GetItemsShortByDataNamesResponse")]
        System.IAsyncResult BeginGetItemsShortByDataNames(System.Collections.ObjectModel.ObservableCollection<string> dataNames, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> EndGetItemsShortByDataNames(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/GetTrends", ReplyAction="http://tempuri.org/IDataService/GetTrendsResponse")]
        System.IAsyncResult BeginGetTrends(string tableName, int type, System.DateTime dateBegin, System.DateTime dateEnd, int timePeriod, System.AsyncCallback callback, object asyncState);
        
        WebControl.DataServiceReference.ItemSqlTrends EndGetTrends(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/GetSqlCurrentTime", ReplyAction="http://tempuri.org/IDataService/GetSqlCurrentTimeResponse")]
        System.IAsyncResult BeginGetSqlCurrentTime(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetSqlCurrentTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/GetDateTimeOffset", ReplyAction="http://tempuri.org/IDataService/GetDateTimeOffsetResponse")]
        System.IAsyncResult BeginGetDateTimeOffset(System.AsyncCallback callback, object asyncState);
        
        System.DateTimeOffset EndGetDateTimeOffset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/SetClientInfoFull", ReplyAction="http://tempuri.org/IDataService/SetClientInfoFullResponse")]
        System.IAsyncResult BeginSetClientInfoFull(string quid, string ipAddress, string version, System.DateTime clientTime, string browserInformation, System.AsyncCallback callback, object asyncState);
        
        bool EndSetClientInfoFull(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/SetClientInfoShort", ReplyAction="http://tempuri.org/IDataService/SetClientInfoShortResponse")]
        System.IAsyncResult BeginSetClientInfoShort(string quid, System.DateTime clientTime, System.AsyncCallback callback, object asyncState);
        
        bool EndSetClientInfoShort(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/GetMTBTIDELOGs", ReplyAction="http://tempuri.org/IDataService/GetMTBTIDELOGsResponse")]
        System.IAsyncResult BeginGetMTBTIDELOGs(string tableName, System.DateTime dateBegin, System.DateTime dateEnd, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.TIDELOGEx> EndGetMTBTIDELOGs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/GetServiceInfo", ReplyAction="http://tempuri.org/IDataService/GetServiceInfoResponse")]
        System.IAsyncResult BeginGetServiceInfo(System.AsyncCallback callback, object asyncState);
        
        string EndGetServiceInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : WebControl.DataServiceReference.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetItemsFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemsFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSql> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSql>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetItemsShortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemsShortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetItemsShortByDataNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemsShortByDataNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTrendsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTrendsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WebControl.DataServiceReference.ItemSqlTrends Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WebControl.DataServiceReference.ItemSqlTrends)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSqlCurrentTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSqlCurrentTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDateTimeOffsetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDateTimeOffsetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTimeOffset Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTimeOffset)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetClientInfoFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetClientInfoFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetClientInfoShortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetClientInfoShortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMTBTIDELOGsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMTBTIDELOGsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.TIDELOGEx> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.TIDELOGEx>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServiceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServiceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<WebControl.DataServiceReference.IDataService>, WebControl.DataServiceReference.IDataService {
        
        private BeginOperationDelegate onBeginGetItemsFullDelegate;
        
        private EndOperationDelegate onEndGetItemsFullDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemsFullCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetItemsShortDelegate;
        
        private EndOperationDelegate onEndGetItemsShortDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemsShortCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetItemsShortByDataNamesDelegate;
        
        private EndOperationDelegate onEndGetItemsShortByDataNamesDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemsShortByDataNamesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTrendsDelegate;
        
        private EndOperationDelegate onEndGetTrendsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTrendsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSqlCurrentTimeDelegate;
        
        private EndOperationDelegate onEndGetSqlCurrentTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetSqlCurrentTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDateTimeOffsetDelegate;
        
        private EndOperationDelegate onEndGetDateTimeOffsetDelegate;
        
        private System.Threading.SendOrPostCallback onGetDateTimeOffsetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetClientInfoFullDelegate;
        
        private EndOperationDelegate onEndSetClientInfoFullDelegate;
        
        private System.Threading.SendOrPostCallback onSetClientInfoFullCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetClientInfoShortDelegate;
        
        private EndOperationDelegate onEndSetClientInfoShortDelegate;
        
        private System.Threading.SendOrPostCallback onSetClientInfoShortCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMTBTIDELOGsDelegate;
        
        private EndOperationDelegate onEndGetMTBTIDELOGsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMTBTIDELOGsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServiceInfoDelegate;
        
        private EndOperationDelegate onEndGetServiceInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetServiceInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Не удалось установить CookieContainer. Убедитесь, что привязка содержит HttpCooki" +
                            "eContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetItemsFullCompletedEventArgs> GetItemsFullCompleted;
        
        public event System.EventHandler<GetItemsShortCompletedEventArgs> GetItemsShortCompleted;
        
        public event System.EventHandler<GetItemsShortByDataNamesCompletedEventArgs> GetItemsShortByDataNamesCompleted;
        
        public event System.EventHandler<GetTrendsCompletedEventArgs> GetTrendsCompleted;
        
        public event System.EventHandler<GetSqlCurrentTimeCompletedEventArgs> GetSqlCurrentTimeCompleted;
        
        public event System.EventHandler<GetDateTimeOffsetCompletedEventArgs> GetDateTimeOffsetCompleted;
        
        public event System.EventHandler<SetClientInfoFullCompletedEventArgs> SetClientInfoFullCompleted;
        
        public event System.EventHandler<SetClientInfoShortCompletedEventArgs> SetClientInfoShortCompleted;
        
        public event System.EventHandler<GetMTBTIDELOGsCompletedEventArgs> GetMTBTIDELOGsCompleted;
        
        public event System.EventHandler<GetServiceInfoCompletedEventArgs> GetServiceInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebControl.DataServiceReference.IDataService.BeginGetItemsFull(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItemsFull(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSql> WebControl.DataServiceReference.IDataService.EndGetItemsFull(System.IAsyncResult result) {
            return base.Channel.EndGetItemsFull(result);
        }
        
        private System.IAsyncResult OnBeginGetItemsFull(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WebControl.DataServiceReference.IDataService)(this)).BeginGetItemsFull(callback, asyncState);
        }
        
        private object[] OnEndGetItemsFull(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSql> retVal = ((WebControl.DataServiceReference.IDataService)(this)).EndGetItemsFull(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemsFullCompleted(object state) {
            if ((this.GetItemsFullCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemsFullCompleted(this, new GetItemsFullCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemsFullAsync() {
            this.GetItemsFullAsync(null);
        }
        
        public void GetItemsFullAsync(object userState) {
            if ((this.onBeginGetItemsFullDelegate == null)) {
                this.onBeginGetItemsFullDelegate = new BeginOperationDelegate(this.OnBeginGetItemsFull);
            }
            if ((this.onEndGetItemsFullDelegate == null)) {
                this.onEndGetItemsFullDelegate = new EndOperationDelegate(this.OnEndGetItemsFull);
            }
            if ((this.onGetItemsFullCompletedDelegate == null)) {
                this.onGetItemsFullCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemsFullCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemsFullDelegate, null, this.onEndGetItemsFullDelegate, this.onGetItemsFullCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebControl.DataServiceReference.IDataService.BeginGetItemsShort(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItemsShort(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> WebControl.DataServiceReference.IDataService.EndGetItemsShort(System.IAsyncResult result) {
            return base.Channel.EndGetItemsShort(result);
        }
        
        private System.IAsyncResult OnBeginGetItemsShort(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WebControl.DataServiceReference.IDataService)(this)).BeginGetItemsShort(callback, asyncState);
        }
        
        private object[] OnEndGetItemsShort(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> retVal = ((WebControl.DataServiceReference.IDataService)(this)).EndGetItemsShort(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemsShortCompleted(object state) {
            if ((this.GetItemsShortCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemsShortCompleted(this, new GetItemsShortCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemsShortAsync() {
            this.GetItemsShortAsync(null);
        }
        
        public void GetItemsShortAsync(object userState) {
            if ((this.onBeginGetItemsShortDelegate == null)) {
                this.onBeginGetItemsShortDelegate = new BeginOperationDelegate(this.OnBeginGetItemsShort);
            }
            if ((this.onEndGetItemsShortDelegate == null)) {
                this.onEndGetItemsShortDelegate = new EndOperationDelegate(this.OnEndGetItemsShort);
            }
            if ((this.onGetItemsShortCompletedDelegate == null)) {
                this.onGetItemsShortCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemsShortCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemsShortDelegate, null, this.onEndGetItemsShortDelegate, this.onGetItemsShortCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebControl.DataServiceReference.IDataService.BeginGetItemsShortByDataNames(System.Collections.ObjectModel.ObservableCollection<string> dataNames, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItemsShortByDataNames(dataNames, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> WebControl.DataServiceReference.IDataService.EndGetItemsShortByDataNames(System.IAsyncResult result) {
            return base.Channel.EndGetItemsShortByDataNames(result);
        }
        
        private System.IAsyncResult OnBeginGetItemsShortByDataNames(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> dataNames = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((WebControl.DataServiceReference.IDataService)(this)).BeginGetItemsShortByDataNames(dataNames, callback, asyncState);
        }
        
        private object[] OnEndGetItemsShortByDataNames(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> retVal = ((WebControl.DataServiceReference.IDataService)(this)).EndGetItemsShortByDataNames(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemsShortByDataNamesCompleted(object state) {
            if ((this.GetItemsShortByDataNamesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemsShortByDataNamesCompleted(this, new GetItemsShortByDataNamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemsShortByDataNamesAsync(System.Collections.ObjectModel.ObservableCollection<string> dataNames) {
            this.GetItemsShortByDataNamesAsync(dataNames, null);
        }
        
        public void GetItemsShortByDataNamesAsync(System.Collections.ObjectModel.ObservableCollection<string> dataNames, object userState) {
            if ((this.onBeginGetItemsShortByDataNamesDelegate == null)) {
                this.onBeginGetItemsShortByDataNamesDelegate = new BeginOperationDelegate(this.OnBeginGetItemsShortByDataNames);
            }
            if ((this.onEndGetItemsShortByDataNamesDelegate == null)) {
                this.onEndGetItemsShortByDataNamesDelegate = new EndOperationDelegate(this.OnEndGetItemsShortByDataNames);
            }
            if ((this.onGetItemsShortByDataNamesCompletedDelegate == null)) {
                this.onGetItemsShortByDataNamesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemsShortByDataNamesCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemsShortByDataNamesDelegate, new object[] {
                        dataNames}, this.onEndGetItemsShortByDataNamesDelegate, this.onGetItemsShortByDataNamesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebControl.DataServiceReference.IDataService.BeginGetTrends(string tableName, int type, System.DateTime dateBegin, System.DateTime dateEnd, int timePeriod, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTrends(tableName, type, dateBegin, dateEnd, timePeriod, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebControl.DataServiceReference.ItemSqlTrends WebControl.DataServiceReference.IDataService.EndGetTrends(System.IAsyncResult result) {
            return base.Channel.EndGetTrends(result);
        }
        
        private System.IAsyncResult OnBeginGetTrends(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tableName = ((string)(inValues[0]));
            int type = ((int)(inValues[1]));
            System.DateTime dateBegin = ((System.DateTime)(inValues[2]));
            System.DateTime dateEnd = ((System.DateTime)(inValues[3]));
            int timePeriod = ((int)(inValues[4]));
            return ((WebControl.DataServiceReference.IDataService)(this)).BeginGetTrends(tableName, type, dateBegin, dateEnd, timePeriod, callback, asyncState);
        }
        
        private object[] OnEndGetTrends(System.IAsyncResult result) {
            WebControl.DataServiceReference.ItemSqlTrends retVal = ((WebControl.DataServiceReference.IDataService)(this)).EndGetTrends(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTrendsCompleted(object state) {
            if ((this.GetTrendsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTrendsCompleted(this, new GetTrendsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTrendsAsync(string tableName, int type, System.DateTime dateBegin, System.DateTime dateEnd, int timePeriod) {
            this.GetTrendsAsync(tableName, type, dateBegin, dateEnd, timePeriod, null);
        }
        
        public void GetTrendsAsync(string tableName, int type, System.DateTime dateBegin, System.DateTime dateEnd, int timePeriod, object userState) {
            if ((this.onBeginGetTrendsDelegate == null)) {
                this.onBeginGetTrendsDelegate = new BeginOperationDelegate(this.OnBeginGetTrends);
            }
            if ((this.onEndGetTrendsDelegate == null)) {
                this.onEndGetTrendsDelegate = new EndOperationDelegate(this.OnEndGetTrends);
            }
            if ((this.onGetTrendsCompletedDelegate == null)) {
                this.onGetTrendsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTrendsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTrendsDelegate, new object[] {
                        tableName,
                        type,
                        dateBegin,
                        dateEnd,
                        timePeriod}, this.onEndGetTrendsDelegate, this.onGetTrendsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebControl.DataServiceReference.IDataService.BeginGetSqlCurrentTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSqlCurrentTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime WebControl.DataServiceReference.IDataService.EndGetSqlCurrentTime(System.IAsyncResult result) {
            return base.Channel.EndGetSqlCurrentTime(result);
        }
        
        private System.IAsyncResult OnBeginGetSqlCurrentTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WebControl.DataServiceReference.IDataService)(this)).BeginGetSqlCurrentTime(callback, asyncState);
        }
        
        private object[] OnEndGetSqlCurrentTime(System.IAsyncResult result) {
            System.DateTime retVal = ((WebControl.DataServiceReference.IDataService)(this)).EndGetSqlCurrentTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSqlCurrentTimeCompleted(object state) {
            if ((this.GetSqlCurrentTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSqlCurrentTimeCompleted(this, new GetSqlCurrentTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSqlCurrentTimeAsync() {
            this.GetSqlCurrentTimeAsync(null);
        }
        
        public void GetSqlCurrentTimeAsync(object userState) {
            if ((this.onBeginGetSqlCurrentTimeDelegate == null)) {
                this.onBeginGetSqlCurrentTimeDelegate = new BeginOperationDelegate(this.OnBeginGetSqlCurrentTime);
            }
            if ((this.onEndGetSqlCurrentTimeDelegate == null)) {
                this.onEndGetSqlCurrentTimeDelegate = new EndOperationDelegate(this.OnEndGetSqlCurrentTime);
            }
            if ((this.onGetSqlCurrentTimeCompletedDelegate == null)) {
                this.onGetSqlCurrentTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSqlCurrentTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetSqlCurrentTimeDelegate, null, this.onEndGetSqlCurrentTimeDelegate, this.onGetSqlCurrentTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebControl.DataServiceReference.IDataService.BeginGetDateTimeOffset(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDateTimeOffset(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTimeOffset WebControl.DataServiceReference.IDataService.EndGetDateTimeOffset(System.IAsyncResult result) {
            return base.Channel.EndGetDateTimeOffset(result);
        }
        
        private System.IAsyncResult OnBeginGetDateTimeOffset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WebControl.DataServiceReference.IDataService)(this)).BeginGetDateTimeOffset(callback, asyncState);
        }
        
        private object[] OnEndGetDateTimeOffset(System.IAsyncResult result) {
            System.DateTimeOffset retVal = ((WebControl.DataServiceReference.IDataService)(this)).EndGetDateTimeOffset(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDateTimeOffsetCompleted(object state) {
            if ((this.GetDateTimeOffsetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDateTimeOffsetCompleted(this, new GetDateTimeOffsetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDateTimeOffsetAsync() {
            this.GetDateTimeOffsetAsync(null);
        }
        
        public void GetDateTimeOffsetAsync(object userState) {
            if ((this.onBeginGetDateTimeOffsetDelegate == null)) {
                this.onBeginGetDateTimeOffsetDelegate = new BeginOperationDelegate(this.OnBeginGetDateTimeOffset);
            }
            if ((this.onEndGetDateTimeOffsetDelegate == null)) {
                this.onEndGetDateTimeOffsetDelegate = new EndOperationDelegate(this.OnEndGetDateTimeOffset);
            }
            if ((this.onGetDateTimeOffsetCompletedDelegate == null)) {
                this.onGetDateTimeOffsetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDateTimeOffsetCompleted);
            }
            base.InvokeAsync(this.onBeginGetDateTimeOffsetDelegate, null, this.onEndGetDateTimeOffsetDelegate, this.onGetDateTimeOffsetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebControl.DataServiceReference.IDataService.BeginSetClientInfoFull(string quid, string ipAddress, string version, System.DateTime clientTime, string browserInformation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetClientInfoFull(quid, ipAddress, version, clientTime, browserInformation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WebControl.DataServiceReference.IDataService.EndSetClientInfoFull(System.IAsyncResult result) {
            return base.Channel.EndSetClientInfoFull(result);
        }
        
        private System.IAsyncResult OnBeginSetClientInfoFull(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string quid = ((string)(inValues[0]));
            string ipAddress = ((string)(inValues[1]));
            string version = ((string)(inValues[2]));
            System.DateTime clientTime = ((System.DateTime)(inValues[3]));
            string browserInformation = ((string)(inValues[4]));
            return ((WebControl.DataServiceReference.IDataService)(this)).BeginSetClientInfoFull(quid, ipAddress, version, clientTime, browserInformation, callback, asyncState);
        }
        
        private object[] OnEndSetClientInfoFull(System.IAsyncResult result) {
            bool retVal = ((WebControl.DataServiceReference.IDataService)(this)).EndSetClientInfoFull(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetClientInfoFullCompleted(object state) {
            if ((this.SetClientInfoFullCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetClientInfoFullCompleted(this, new SetClientInfoFullCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetClientInfoFullAsync(string quid, string ipAddress, string version, System.DateTime clientTime, string browserInformation) {
            this.SetClientInfoFullAsync(quid, ipAddress, version, clientTime, browserInformation, null);
        }
        
        public void SetClientInfoFullAsync(string quid, string ipAddress, string version, System.DateTime clientTime, string browserInformation, object userState) {
            if ((this.onBeginSetClientInfoFullDelegate == null)) {
                this.onBeginSetClientInfoFullDelegate = new BeginOperationDelegate(this.OnBeginSetClientInfoFull);
            }
            if ((this.onEndSetClientInfoFullDelegate == null)) {
                this.onEndSetClientInfoFullDelegate = new EndOperationDelegate(this.OnEndSetClientInfoFull);
            }
            if ((this.onSetClientInfoFullCompletedDelegate == null)) {
                this.onSetClientInfoFullCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetClientInfoFullCompleted);
            }
            base.InvokeAsync(this.onBeginSetClientInfoFullDelegate, new object[] {
                        quid,
                        ipAddress,
                        version,
                        clientTime,
                        browserInformation}, this.onEndSetClientInfoFullDelegate, this.onSetClientInfoFullCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebControl.DataServiceReference.IDataService.BeginSetClientInfoShort(string quid, System.DateTime clientTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetClientInfoShort(quid, clientTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WebControl.DataServiceReference.IDataService.EndSetClientInfoShort(System.IAsyncResult result) {
            return base.Channel.EndSetClientInfoShort(result);
        }
        
        private System.IAsyncResult OnBeginSetClientInfoShort(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string quid = ((string)(inValues[0]));
            System.DateTime clientTime = ((System.DateTime)(inValues[1]));
            return ((WebControl.DataServiceReference.IDataService)(this)).BeginSetClientInfoShort(quid, clientTime, callback, asyncState);
        }
        
        private object[] OnEndSetClientInfoShort(System.IAsyncResult result) {
            bool retVal = ((WebControl.DataServiceReference.IDataService)(this)).EndSetClientInfoShort(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetClientInfoShortCompleted(object state) {
            if ((this.SetClientInfoShortCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetClientInfoShortCompleted(this, new SetClientInfoShortCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetClientInfoShortAsync(string quid, System.DateTime clientTime) {
            this.SetClientInfoShortAsync(quid, clientTime, null);
        }
        
        public void SetClientInfoShortAsync(string quid, System.DateTime clientTime, object userState) {
            if ((this.onBeginSetClientInfoShortDelegate == null)) {
                this.onBeginSetClientInfoShortDelegate = new BeginOperationDelegate(this.OnBeginSetClientInfoShort);
            }
            if ((this.onEndSetClientInfoShortDelegate == null)) {
                this.onEndSetClientInfoShortDelegate = new EndOperationDelegate(this.OnEndSetClientInfoShort);
            }
            if ((this.onSetClientInfoShortCompletedDelegate == null)) {
                this.onSetClientInfoShortCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetClientInfoShortCompleted);
            }
            base.InvokeAsync(this.onBeginSetClientInfoShortDelegate, new object[] {
                        quid,
                        clientTime}, this.onEndSetClientInfoShortDelegate, this.onSetClientInfoShortCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebControl.DataServiceReference.IDataService.BeginGetMTBTIDELOGs(string tableName, System.DateTime dateBegin, System.DateTime dateEnd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMTBTIDELOGs(tableName, dateBegin, dateEnd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.TIDELOGEx> WebControl.DataServiceReference.IDataService.EndGetMTBTIDELOGs(System.IAsyncResult result) {
            return base.Channel.EndGetMTBTIDELOGs(result);
        }
        
        private System.IAsyncResult OnBeginGetMTBTIDELOGs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tableName = ((string)(inValues[0]));
            System.DateTime dateBegin = ((System.DateTime)(inValues[1]));
            System.DateTime dateEnd = ((System.DateTime)(inValues[2]));
            return ((WebControl.DataServiceReference.IDataService)(this)).BeginGetMTBTIDELOGs(tableName, dateBegin, dateEnd, callback, asyncState);
        }
        
        private object[] OnEndGetMTBTIDELOGs(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.TIDELOGEx> retVal = ((WebControl.DataServiceReference.IDataService)(this)).EndGetMTBTIDELOGs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMTBTIDELOGsCompleted(object state) {
            if ((this.GetMTBTIDELOGsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMTBTIDELOGsCompleted(this, new GetMTBTIDELOGsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMTBTIDELOGsAsync(string tableName, System.DateTime dateBegin, System.DateTime dateEnd) {
            this.GetMTBTIDELOGsAsync(tableName, dateBegin, dateEnd, null);
        }
        
        public void GetMTBTIDELOGsAsync(string tableName, System.DateTime dateBegin, System.DateTime dateEnd, object userState) {
            if ((this.onBeginGetMTBTIDELOGsDelegate == null)) {
                this.onBeginGetMTBTIDELOGsDelegate = new BeginOperationDelegate(this.OnBeginGetMTBTIDELOGs);
            }
            if ((this.onEndGetMTBTIDELOGsDelegate == null)) {
                this.onEndGetMTBTIDELOGsDelegate = new EndOperationDelegate(this.OnEndGetMTBTIDELOGs);
            }
            if ((this.onGetMTBTIDELOGsCompletedDelegate == null)) {
                this.onGetMTBTIDELOGsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMTBTIDELOGsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMTBTIDELOGsDelegate, new object[] {
                        tableName,
                        dateBegin,
                        dateEnd}, this.onEndGetMTBTIDELOGsDelegate, this.onGetMTBTIDELOGsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebControl.DataServiceReference.IDataService.BeginGetServiceInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServiceInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WebControl.DataServiceReference.IDataService.EndGetServiceInfo(System.IAsyncResult result) {
            return base.Channel.EndGetServiceInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetServiceInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WebControl.DataServiceReference.IDataService)(this)).BeginGetServiceInfo(callback, asyncState);
        }
        
        private object[] OnEndGetServiceInfo(System.IAsyncResult result) {
            string retVal = ((WebControl.DataServiceReference.IDataService)(this)).EndGetServiceInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServiceInfoCompleted(object state) {
            if ((this.GetServiceInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServiceInfoCompleted(this, new GetServiceInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServiceInfoAsync() {
            this.GetServiceInfoAsync(null);
        }
        
        public void GetServiceInfoAsync(object userState) {
            if ((this.onBeginGetServiceInfoDelegate == null)) {
                this.onBeginGetServiceInfoDelegate = new BeginOperationDelegate(this.OnBeginGetServiceInfo);
            }
            if ((this.onEndGetServiceInfoDelegate == null)) {
                this.onEndGetServiceInfoDelegate = new EndOperationDelegate(this.OnEndGetServiceInfo);
            }
            if ((this.onGetServiceInfoCompletedDelegate == null)) {
                this.onGetServiceInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServiceInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetServiceInfoDelegate, null, this.onEndGetServiceInfoDelegate, this.onGetServiceInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WebControl.DataServiceReference.IDataService CreateChannel() {
            return new DataServiceClientChannel(this);
        }
        
        private class DataServiceClientChannel : ChannelBase<WebControl.DataServiceReference.IDataService>, WebControl.DataServiceReference.IDataService {
            
            public DataServiceClientChannel(System.ServiceModel.ClientBase<WebControl.DataServiceReference.IDataService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetItemsFull(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetItemsFull", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSql> EndGetItemsFull(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSql> _result = ((System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSql>)(base.EndInvoke("GetItemsFull", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetItemsShort(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetItemsShort", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> EndGetItemsShort(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> _result = ((System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple>)(base.EndInvoke("GetItemsShort", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetItemsShortByDataNames(System.Collections.ObjectModel.ObservableCollection<string> dataNames, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = dataNames;
                System.IAsyncResult _result = base.BeginInvoke("GetItemsShortByDataNames", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> EndGetItemsShortByDataNames(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple> _result = ((System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.ItemSqlSimple>)(base.EndInvoke("GetItemsShortByDataNames", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTrends(string tableName, int type, System.DateTime dateBegin, System.DateTime dateEnd, int timePeriod, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = tableName;
                _args[1] = type;
                _args[2] = dateBegin;
                _args[3] = dateEnd;
                _args[4] = timePeriod;
                System.IAsyncResult _result = base.BeginInvoke("GetTrends", _args, callback, asyncState);
                return _result;
            }
            
            public WebControl.DataServiceReference.ItemSqlTrends EndGetTrends(System.IAsyncResult result) {
                object[] _args = new object[0];
                WebControl.DataServiceReference.ItemSqlTrends _result = ((WebControl.DataServiceReference.ItemSqlTrends)(base.EndInvoke("GetTrends", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSqlCurrentTime(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSqlCurrentTime", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndGetSqlCurrentTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("GetSqlCurrentTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDateTimeOffset(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDateTimeOffset", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTimeOffset EndGetDateTimeOffset(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTimeOffset _result = ((System.DateTimeOffset)(base.EndInvoke("GetDateTimeOffset", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetClientInfoFull(string quid, string ipAddress, string version, System.DateTime clientTime, string browserInformation, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = quid;
                _args[1] = ipAddress;
                _args[2] = version;
                _args[3] = clientTime;
                _args[4] = browserInformation;
                System.IAsyncResult _result = base.BeginInvoke("SetClientInfoFull", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetClientInfoFull(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetClientInfoFull", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetClientInfoShort(string quid, System.DateTime clientTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = quid;
                _args[1] = clientTime;
                System.IAsyncResult _result = base.BeginInvoke("SetClientInfoShort", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetClientInfoShort(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetClientInfoShort", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMTBTIDELOGs(string tableName, System.DateTime dateBegin, System.DateTime dateEnd, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = tableName;
                _args[1] = dateBegin;
                _args[2] = dateEnd;
                System.IAsyncResult _result = base.BeginInvoke("GetMTBTIDELOGs", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.TIDELOGEx> EndGetMTBTIDELOGs(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.TIDELOGEx> _result = ((System.Collections.ObjectModel.ObservableCollection<WebControl.DataServiceReference.TIDELOGEx>)(base.EndInvoke("GetMTBTIDELOGs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetServiceInfo(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetServiceInfo", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetServiceInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetServiceInfo", _args, result)));
                return _result;
            }
        }
    }
}

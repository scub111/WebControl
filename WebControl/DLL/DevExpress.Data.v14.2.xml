<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Data.v14.2</name>
    </assembly>
    <members>
        <member name="T:DevExpress.Data.XtraReports.Wizard.ReportModel">

            <summary>
                <para>Stores intermediate report settings during a <b>Report Wizard</b> session.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ReportModel.#ctor">
            <summary>
                <para>Initializes a new instance of the ReportModel class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.AdjustFieldWidth">
            <summary>
                <para>Specifies whether or not the data fields' content should affect the width of corresponding report controls.
</para>
            </summary>
            <value><b>true</b> to adjust the field width; otherwise <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ReportModel.Clone">
            <summary>
                <para>Creates a new ReportModel instance, which is a copy of the current instance. 
</para>
            </summary>
            <returns>A new ReportModel instance, which is a copy of the current instance. 
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.Columns">
            <summary>
                <para>Specifies the data columns that are available in the Report Wizard.
</para>
            </summary>
            <value>An array of <see cref="T:System.String"/> values, specifying the columns available from the datasource.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.CustomLabelInformation">
            <summary>
                <para>Specifies the information that is required to create a custom label report using a Report Wizard. 

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation"/> object.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.DataMemberName">
            <summary>
                <para>Specifies the data member name.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> object.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.DataSourceName">
            <summary>
                <para>Specifies the data source name.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ReportModel.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current ReportModel instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current ReportModel instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ReportModel.GetHashCode">
            <summary>
                <para>Serves as the default hash function.
</para>
            </summary>
            <returns>An integer value, specifying the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.GroupingLevels">
            <summary>
                <para>Specifies the grouping levels available in a report.
</para>
            </summary>
            <value>An array of <see cref="T:System.Collections.Generic.HashSet"/> values.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.IgnoreNullValuesForSummary">
            <summary>
                <para>Specifies whether or not null values (if occured in a datasource) should be ignored when calculating a summary function.
</para>
            </summary>
            <value><b>true</b> to ignore null values; otherwise <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ReportModel.IsGrouped">
            <summary>
                <para>Specifies whether or not there are groups in the report.
</para>
            </summary>
            <returns><b>true</b> if the report contains groups; otherwise <b>false</b>.

</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.LabelProductDetailId">
            <summary>
                <para>For internal use. Specifies the ID of a product label's details.
</para>
            </summary>
            <value>An integer value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.LabelProductId">
            <summary>
                <para>For internal use. Specifies the ID of a product label.
</para>
            </summary>
            <value>An integer value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.Layout">
            <summary>
                <para>Specifies the report layout type.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportLayout"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.Portrait">
            <summary>
                <para>Specifies the report page orientation.
</para>
            </summary>
            <value><b>true</b> if the page orientation is portrait; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.ReportStyleId">
            <summary>
                <para>Specifies the report visual style.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportStyleId"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.ReportTitle">
            <summary>
                <para>Specifies the report title (for printing on the report header).

</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.ReportType">
            <summary>
                <para>Specifies the report type.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportType"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.SummaryOptions">
            <summary>
                <para>For internal use. Specifies the options required to calculate a summary function in a report.
</para>
            </summary>
            <value>A collection of DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions objects.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient">

            <summary>
                <para>If implemented by a class, provides the client-side functionality for a <b>Report Wizard</b>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.AddNewReportAsync(DevExpress.Data.XtraReports.Wizard.ReportModel,System.Object)">
            <summary>
                <para>Adds a new report (asynchronously).
</para>
            </summary>
            <param name="model">
		A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportModel"/> object.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.AddNewReportCompleted">
            <summary>
                <para>Occurs when a new report has been added.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetColumnsAsync(System.String,DevExpress.Data.XtraReports.DataProviders.TableInfo,System.Object)">
            <summary>
                <para>Obtains columns from a data source (asynchronously).

</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value.

            </param>
            <param name="dataMemberName">
		A <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> object.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetColumnsCompleted">
            <summary>
                <para>Occurs when all data columns have been obtained.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetDataMembersAsync(System.String,System.Object)">
            <summary>
                <para>Obtains the data members from a report's data source (asynchronously).

</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetDataMembersCompleted">
            <summary>
                <para>Occurs when all data members have been obtained.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetDataSourceDisplayNameAsync(System.String,System.String,System.Object)">
            <summary>
                <para>Obtains the display name of a data source (asynchronously).

</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member name.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetDataSourceDisplayNameCompleted">
            <summary>
                <para>Occurs when the data source display name has been obtained.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetDataSourcesAsync(System.Object)">
            <summary>
                <para>Obtains a report's data sources (asynchronously).
</para>
            </summary>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetDataSourcesCompleted">
            <summary>
                <para>Occurs when the data sources have been obtained.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetItemPropertiesAsync(System.String,System.String,System.Object)">
            <summary>
                <para>Obtains item properties from a data source (asynchronously).

</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member name.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetItemPropertiesCompleted">
            <summary>
                <para>Occurs when the item properties have been obtained.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetListItemPropertiesAsync(System.String,System.String,System.Object)">
            <summary>
                <para>Obtains list item properties from a data source (asynchronously).

</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member name.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetListItemPropertiesCompleted">
            <summary>
                <para>Occurs when the list item properties have been obtained.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService">

            <summary>
                <para>If implemented by a class, provides a service contract for the <see cref="T:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.BeginAddNewReport(DevExpress.Data.XtraReports.Wizard.ReportModel,System.AsyncCallback,System.Object)">
            <summary>
                <para>Starts creating a new report.
</para>
            </summary>
            <param name="model">
		A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportModel"/> object.

            </param>
            <param name="callback">
		References a method to be called when a corresponding asynchronous operation is completed.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>
            <returns>An object containing information about the status of an asynchronous operation.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.BeginGetColumns(System.String,DevExpress.Data.XtraReports.DataProviders.TableInfo,System.AsyncCallback,System.Object)">
            <summary>
                <para>Starts obtaining the columns from a data source.
</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="dataMemberName">
		A <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> object, specifying the data member.

            </param>
            <param name="callback">
		References a method to be called when a corresponding asynchronous operation is completed.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>
            <returns>An object containing information about the status of an asynchronous operation.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.BeginGetDataMembers(System.String,System.AsyncCallback,System.Object)">
            <summary>
                <para>Starts obtaining the data members from a data source.
</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="callback">
		References a method to be called when a corresponding asynchronous operation is completed.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>
            <returns>An object containing information about the status of an asynchronous operation.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.BeginGetDataSourceDisplayName(System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>
                <para>Starts obtaining the data source display name.
</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member.

            </param>
            <param name="callback">
		References a method to be called when a corresponding asynchronous operation is completed.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>
            <returns>An object containing information about the status of an asynchronous operation.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.BeginGetDataSources(System.AsyncCallback,System.Object)">
            <summary>
                <para>Starts obtaining the data sources.
</para>
            </summary>
            <param name="callback">
		References a method to be called when a corresponding asynchronous operation is completed.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>
            <returns>An object containing information about the status of an asynchronous operation.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.BeginGetItemProperties(System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>
                <para>Starts obtaining the item properties from a data source.
</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member.

            </param>
            <param name="callback">
		References a method to be called when a corresponding asynchronous operation is completed.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>
            <returns>An object containing information about the status of an asynchronous operation.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.BeginGetListItemProperties(System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>
                <para>Starts obtaining the list item properties from a data source.
</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member.

            </param>
            <param name="callback">
		References a method to be called when a corresponding asynchronous operation is completed.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>
            <returns>An object containing information about the status of an asynchronous operation.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.EndAddNewReport(System.IAsyncResult)">
            <summary>
                <para>Ends creating a new report.
</para>
            </summary>
            <param name="ar">
		An object containing information about the status of an asynchronous operation.

            </param>
            <returns>A <see cref="T:System.String"/> value.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.EndGetColumns(System.IAsyncResult)">
            <summary>
                <para>Ends obtaining the columns from a data source.
</para>
            </summary>
            <param name="ar">
		An object containing information about the status of an asynchronous operation.

            </param>
            <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.EndGetDataMembers(System.IAsyncResult)">
            <summary>
                <para>Ends obtaining the data members from a data source.
</para>
            </summary>
            <param name="ar">
		An object containing information about the status of an asynchronous operation.

            </param>
            <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.EndGetDataSourceDisplayName(System.IAsyncResult)">
            <summary>
                <para>Ends obtaining the data source display name.
</para>
            </summary>
            <param name="ar">
		An object containing information about the status of an asynchronous operation.

            </param>
            <returns>A <see cref="T:System.String"/> value.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.EndGetDataSources(System.IAsyncResult)">
            <summary>
                <para>Ends obtaining the data sources.
</para>
            </summary>
            <param name="ar">
		An object containing information about the status of an asynchronous operation.

            </param>
            <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.EndGetItemProperties(System.IAsyncResult)">
            <summary>
                <para>Ends obtaining the item properties from a data source.
</para>
            </summary>
            <param name="ar">
		An object containing information about the status of an asynchronous operation.

            </param>
            <returns>An array of DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService.EndGetListItemProperties(System.IAsyncResult)">
            <summary>
                <para>Ends obtaining the list item properties from a data source.
</para>
            </summary>
            <param name="ar">
		An object containing information about the status of an asynchronous operation.

            </param>
            <returns>An array of DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy objects.
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient">

            <summary>
                <para>Provides the client-side functionality for a <b>Report Wizard</b>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.#ctor(DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService)">
            <summary>
                <para>Initializes a new instance of the ReportWizardServiceClient class with the specified asynchronous service.
</para>
            </summary>
            <param name="channel">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.ServiceModel.IAsyncReportWizardService"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.AddNewReportAsync(DevExpress.Data.XtraReports.Wizard.ReportModel,System.Object)">
            <summary>
                <para>Adds a new report (asynchronously).

</para>
            </summary>
            <param name="model">
		A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportModel"/> object.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.AddNewReportCompleted">
            <summary>
                <para>Occurs when a new report has been added.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetColumnsAsync(System.String,DevExpress.Data.XtraReports.DataProviders.TableInfo,System.Object)">
            <summary>
                <para>Obtains columns from a data source (asynchronously).
</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value.

            </param>
            <param name="dataMemberName">
		A <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> object.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetColumnsCompleted">
            <summary>
                <para>Occurs when all data columns have been obtained.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetDataMembersAsync(System.String,System.Object)">
            <summary>
                <para>Obtains the data members from a report's data source (asynchronously).



</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetDataMembersCompleted">
            <summary>
                <para>Occurs when all data members have been obtained.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetDataSourceDisplayNameAsync(System.String,System.String,System.Object)">
            <summary>
                <para>Obtains the display name of a data source (asynchronously).

</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member name.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetDataSourceDisplayNameCompleted">
            <summary>
                <para>Occurs when the data source display name has been obtained.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetDataSourcesAsync(System.Object)">
            <summary>
                <para>Obtains a report's data sources (asynchronously).

</para>
            </summary>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetDataSourcesCompleted">
            <summary>
                <para>Occurs when the data sources have been obtained.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetItemPropertiesAsync(System.String,System.String,System.Object)">
            <summary>
                <para>Obtains item properties from a data source (asynchronously).
</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member name.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetItemPropertiesCompleted">
            <summary>
                <para>Occurs when the item properties have been obtained.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetListItemPropertiesAsync(System.String,System.String,System.Object)">
            <summary>
                <para>Obtains list item properties from a data source (asynchronously).
</para>
            </summary>
            <param name="dataSourceName">
		A <see cref="T:System.String"/> value, specifying the data source name.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member name.

            </param>
            <param name="asyncState">
		A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.ServiceModel.ReportWizardServiceClient.GetListItemPropertiesCompleted">
            <summary>
                <para>Occurs when the list item properties have been obtained.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1">

            <summary>
                <para>Provides data for the corresponding events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1.#ctor(System.Object,System.Exception,System.Boolean,System.Object)">
            <summary>
                <para>Initializes a new instance of the ScalarOperationCompletedEventArgs class with the specified settings.

</para>
            </summary>
            <param name="result">
		A <see cref="T:System.Object"/> value. This value is assigned to the <see cref="P:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1.Result"/> property.

            </param>
            <param name="error">
		A <see cref="T:System.Exception"/> value.

            </param>
            <param name="cancelled">
		<b>true</b> if the operation has been cancelled; otherwise <b>false</b>.

            </param>
            <param name="userState">
		A <see cref="T:System.Object"/> value.

            </param>


        </member>
        <member name="P:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1.Result">
            <summary>
                <para>Returns the scalar operation result.
</para>
            </summary>
            <value>A generic value.
</value>


        </member>
        <member name="T:DevExpress.Utils.IoC.IntegrityContainer">

            <summary>
                <para>For internal use. Implements the inversion of control (IoC) pattern.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.IoC.IntegrityContainer.#ctor">
            <summary>
                <para>Initializes a new instance of the IntegrityContainer class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterInstance``1(``0)">
            <summary>
                <para>For internal use. 
</para>
            </summary>
            <param name="instance">
		 

            </param>
            <returns>A DevExpress.Utils.IoC.InstanceRegistration object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterType``1">
            <summary>
                <para>For internal use. 
</para>
            </summary>
            <returns>A DevExpress.Utils.IoC.TypeRegistration object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterType``2">
            <summary>
                <para>For internal use. 
</para>
            </summary>
            <returns>A DevExpress.Utils.IoC.TypeRegistration object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.IoC.IntegrityContainer.Resolve(System.Type)">
            <summary>
                <para>For internal use. 
</para>
            </summary>
            <param name="serviceType">
		 

            </param>
            <returns>A <see cref="T:System.Object"/> value.
</returns>


        </member>
        <member name="M:DevExpress.Utils.IoC.IntegrityContainer.Resolve``1">
            <summary>
                <para>For internal use. 
</para>
            </summary>
            <returns> 

</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.FilterCondition">

            <summary>
                <para>Contains enumeration values that specify comparison operation types used to create filter conditions.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.FilterCondition.Contains">
            <summary>
                <para>Specifies the <b>Contains</b> comparison operation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FilterCondition.Default">
            <summary>
                <para>Specifies the default comparison operation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FilterCondition.Equals">
            <summary>
                <para>Specifies the <b>Equals</b> comparison operation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FilterCondition.Like">
            <summary>
                <para>Specifies the <b>Like</b> comparison operation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FilterCondition.StartsWith">
            <summary>
                <para>Specifies the <b>StartsWith</b> comparison operation.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo">

            <summary>
                <para>Encapsulates error information on a specific property.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the ErrorInfo class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.#ctor(System.String,DevExpress.XtraEditors.DXErrorProvider.ErrorType)">
            <summary>
                <para>Initializes a new instance of the ErrorInfo class with the specified error information.
</para>
            </summary>
            <param name="errorText">
		A string that specifies the error text. This value is used to initialize the <see cref="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorText"/> property.

            </param>
            <param name="errorType">
		An error type. This value is used to initialize the <see cref="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorType"/> property.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorText">
            <summary>
                <para>Gets or sets the error text associated with the current property name.
</para>
            </summary>
            <value>A string that represents the error text.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorType">
            <summary>
                <para>Gets or sets the type of error associated with the current property name.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorType"/> value that represents the error type.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperator">

            <summary>
                <para>Declares the base functionality for custom functions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperator.Evaluate(System.Object[])">
            <summary>
                <para>When implemented by a custom function, evaluates it on the client.
</para>
            </summary>
            <param name="operands">
		An array of objects specifying function operands (parameters).

            </param>
            <returns>An Object specifying a custom function's return value, calculated based on the <i>operands</i>.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperator.Name">
            <summary>
                <para>When implemented by a custom function, specifies its name.
</para>
            </summary>
            <value>A String used to identify a custom function.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperator.ResultType(System.Type[])">
            <summary>
                <para>When implemented by a custom function, determines its return value type based on the type of function operands (parameters).
</para>
            </summary>
            <param name="operands">
		An array of function operator (parameter) types.

            </param>
            <returns>A Type object specifying the return value type of a custom function.
</returns>


        </member>
        <member name="T:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo">

            <summary>
                <para>Provides methods to return error information for a business object's properties.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo.GetError(DevExpress.XtraEditors.DXErrorProvider.ErrorInfo)">
            <summary>
                <para>When implemented by a class, this method returns information on an error associated with a business object.
</para>
            </summary>
            <param name="info">
		An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo"/> object that contains information on an error.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo.GetPropertyError(System.String,DevExpress.XtraEditors.DXErrorProvider.ErrorInfo)">
            <summary>
                <para>When implemented by a class, this method returns information on an error associated with a specific business object's property.
</para>
            </summary>
            <param name="propertyName">
		A string that identifies the name of the property for which information on an error is to be returned.

            </param>
            <param name="info">
		An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo"/> object that contains information on an error.

            </param>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags">

            <summary>
                <para>Lists the values that are used to choose a summary function that should be calculated in a report created using End-User Reporting.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Avg">
            <summary>
                <para>The <b>Average</b> summary function is calculated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Count">
            <summary>
                <para>The <b>Count</b> summary function is calculated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Max">
            <summary>
                <para>The <b>Max</b> summary function is calculated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Min">
            <summary>
                <para>The <b>Min</b> summary function is calculated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.None">
            <summary>
                <para>No summary function is calculated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Sum">
            <summary>
                <para>The <b>Sum</b> summary function is calculated.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo">

            <summary>
                <para>Stores settings of a report grouping level.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.#ctor(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
            <summary>
                <para>Initializes a new instance of the GroupingLevelInfo class with specified settings.
</para>
            </summary>
            <param name="columns">
		An array of <a href="http://documentation.devexpress.com/#CoreLibraries/clsDevExpressDataXtraReportsDataProvidersColumnInfotopic">ColumnInfo</a> objects.

            </param>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.Columns">
            <summary>
                <para>Provides access to the collection of columns stored in GroupingLevelInfo.
</para>
            </summary>
            <value>An array of <a href="http://documentation.devexpress.com/#CoreLibraries/clsDevExpressDataXtraReportsDataProvidersColumnInfotopic">ColumnInfo</a> objects.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.ContainsColumn(System.String)">
            <summary>
                <para>Specifies whether or not GroupingLevelInfo contains the requested column.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value, specifying the column name.

            </param>
            <returns><b>true</b> if the specified column is contained in the group; otherwise <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.DisplayName">
            <summary>
                <para>Returns the display name of the GroupingLevelInfo.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current GroupingLevelInfo instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current GroupingLevelInfo instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current GroupingLevelInfo object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.SummaryOptions">

            <summary>
                <para>Provides settings that are required to calculate summary functions in a report created using End-User Reporting.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.SummaryOptions.#ctor(DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags)">
            <summary>
                <para>Initializes a new instance of the SummaryOptions class with the specified settings.
</para>
            </summary>
            <param name="flags">
		A <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration value.

            </param>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Avg">
            <summary>
                <para>Specifies whether or not the Average function should be calculated across the created report.
</para>
            </summary>
            <value><b>true</b> if the Average function is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Count">
            <summary>
                <para>Specifies whether or not the Count function should be calculated across the created report.
</para>
            </summary>
            <value><b>true</b> if the Count function is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Flags">
            <summary>
                <para>Specifies a summary function that should be calculated in a report created using a Silverlight Report Wizard.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Max">
            <summary>
                <para>Specifies whether or not the Max function should be calculated across the created report.
</para>
            </summary>
            <value><b>true</b> if the Max function is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Min">
            <summary>
                <para>Specifies whether or not the Min function should be calculated across the created report.
</para>
            </summary>
            <value><b>true</b> if the Min function is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Sum">
            <summary>
                <para>Specifies whether or not the Sum function should be calculated across the created report.
</para>
            </summary>
            <value><b>true</b> if the Sum function is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1">

            <summary>
                <para>The base class for the <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/>, <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> and <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects that are stored in a Report Wizard's model.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.DisplayName">
            <summary>
                <para>Specifies the datasource display name for a Silverlight Report Wizard.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current EntityInfo instance.


</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current EntityInfo instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current EntityInfo object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.Name">
            <summary>
                <para>Specifies the datasource name.
</para>
            </summary>
            <value>A TName object that is the name of the entity.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo">

            <summary>
                <para>Contains data related to columns available in a datasource.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.ColumnInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the ColumnInfo class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.ColumnInfo.Clone">
            <summary>
                <para>Creates a new ColumnInfo instance, which is a copy of the current instance. 
</para>
            </summary>
            <returns>A new ColumnInfo instance, which is a copy of the current instance. 
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.ColumnInfo.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current ColumnInfo instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current ColumnInfo instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.ColumnInfo.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current ColumnInfo object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.DataProviders.ColumnInfo.TypeSpecifics">
            <summary>
                <para>For internal use. Specifies the type of data column to draw an appropriate icon in the Silverlight Designer's Field List.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Browsing.Design.TypeSpecifics"/> enumeration value.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo">

            <summary>
                <para>Contains information about a datasource.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the DataSourceInfo class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo.Clone">
            <summary>
                <para>Creates a new DataSourceInfo instance, which is a copy of the current instance. 
</para>
            </summary>
            <returns>A new DataSourceInfo instance, which is a copy of the current instance. 
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current DataSourceInfo instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current DataSourceInfo instance; otherwise <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current DataSourceInfo object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo.TablesOrViewsSupported">
            <summary>
                <para>For internal use. Specifies whether a datasource is table-based (e.g., a database), or object-model-based (e.g., an XPO object).

</para>
            </summary>
            <value><b>true</b> if the datasource is table-based; otherwise <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.DataProviders.TableInfo">

            <summary>
                <para>Contains data related to tables and views available in a datasource.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.TableInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the TableInfo class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.TableInfo.Clone">
            <summary>
                <para>Creates a new TableInfo instance, which is a copy of the current instance. 
</para>
            </summary>
            <returns>A new TableInfo instance, which is a copy of the current instance. 
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.DataProviders.TableInfo.DataMemberType">
            <summary>
                <para>Classifies the data member that belongs to a connected data source.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataMemberType"/> enumeration value, classifying the data member.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.DataProviders.TableInfoName">

            <summary>
                <para>Contains names of tables and views available in a datasource.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.TableInfoName.#ctor(System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the TableInfoName class with the specified settings.

</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value. This value is assigned to the <see cref="P:DevExpress.Data.XtraReports.DataProviders.TableInfoName.Name"/> property.

            </param>
            <param name="schemaName">
		A <see cref="T:System.String"/> value. This value is assigned to the <see cref="P:DevExpress.Data.XtraReports.DataProviders.TableInfoName.SchemaName"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.TableInfoName.Clone">
            <summary>
                <para>Creates a new TableInfoName instance, which is a copy of the current instance. 
</para>
            </summary>
            <returns>A new TableInfoName instance, which is a copy of the current instance. 
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.TableInfoName.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current TableInfoName instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current TableInfoName instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.TableInfoName.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current TableInfoName object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.DataProviders.TableInfoName.Name">
            <summary>
                <para>Specifies the name of a data table or view.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value. 
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.DataProviders.TableInfoName.SchemaName">
            <summary>
                <para>Specifies the name of a data source schema.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value. 
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.ReportType">

            <summary>
                <para>Lists the values that define the type of a report that is being created using End-User Reporting.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportType.Empty">
            <summary>
                <para>For internal use. An undefined report type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportType.Label">
            <summary>
                <para>The <b>Label</b> report type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportType.ReportStorage">
            <summary>
                <para>For internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportType.Standard">
            <summary>
                <para>The <b>Standard</b> report type.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.ReportStyleId">

            <summary>
                <para>Lists the values that define the style of a report that is being created using End-User Reporting.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportStyleId.Bold">
            <summary>
                <para>The <b>Bold</b> visual style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportStyleId.Casual">
            <summary>
                <para>The <b>Casual</b> visual style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportStyleId.Compact">
            <summary>
                <para>The <b>Compact</b> visual style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportStyleId.Corporate">
            <summary>
                <para>The <b>Corporate</b> visual style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportStyleId.Formal">
            <summary>
                <para>The <b>Formal</b> visual style.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation">

            <summary>
                <para>Specifies the information that is required to create a custom label report using End-User Reporting.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.#ctor">
            <summary>
                <para>Initializes a new instance of the CustomLabelInformation class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Clone">
            <summary>
                <para>Creates a copy of the current CustomLabelInformation instance.
</para>
            </summary>
            <returns>A <see cref="T:System.Object"/> value.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current CustomLabelInformation instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current CustomLabelInformation instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current CustomLabelInformation object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Height">
            <summary>
                <para>Specifies the height of a custom label.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> structure, specifying the custom label's height.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.HorizontalPitch">
            <summary>
                <para>Specifies the horizontal pitch of a custom label.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> structure, specifying the custom label's horizontal pitch.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.PaperKindDataId">
            <summary>
                <para>Specifies the paper kind ID of a custom label.
</para>
            </summary>
            <value>An integer value, specifying the paper kind ID.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.SideMargin">
            <summary>
                <para>Specifies the side margin of a custom label.
</para>
            </summary>
            <value>An integer value, specifying the label's side margin.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.TopMargin">
            <summary>
                <para>Specifies the top margin of a custom label.
</para>
            </summary>
            <value>An integer value, specifying the label's top margin.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.VerticalPitch">
            <summary>
                <para>Specifies the vertical pitch of a custom label.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> structure, specifying the custom label's vertical pitch.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Width">
            <summary>
                <para>Specifies the width of a custom label.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> structure, specifying the custom label's width.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.ReportLayout">

            <summary>
                <para>Lists the values that define the layout of a report that is being created using End-User Reporting.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.AlignLeft1">
            <summary>
                <para>A left-aligned report layout.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.AlignLeft2">
            <summary>
                <para>A left-aligned report layout.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Block">
            <summary>
                <para>A modular report layout.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Columnar">
            <summary>
                <para>A columnar report layout.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Default">
            <summary>
                <para>The default report layout.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Justified">
            <summary>
                <para>A justified report layout.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Outline1">
            <summary>
                <para>An outlined report layout.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Outline2">
            <summary>
                <para>An outlined report layout.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Stepped">
            <summary>
                <para>A stepped report layout.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Tabular">
            <summary>
                <para>A tabular report layout.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Commands.ICommandUIState">

            <summary>
                <para>Defines a command state.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.Checked">
            <summary>
                <para>Gets or sets the checked state of the command.
</para>
            </summary>
            <value><b>true</b> if the command state is checked; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.EditValue">
            <summary>
                <para>Gets or sets the value used by a command.
</para>
            </summary>
            <value>An object representing the value used by a command.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.Enabled">
            <summary>
                <para>Gets or sets whether the command is enabled.
</para>
            </summary>
            <value><b>true</b> to enable the command; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.Visible">
            <summary>
                <para>Gets or sets whether the UI element to which the command is attached is visible.
</para>
            </summary>
            <value><b>true</b> to display the UI element; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryProcess">

            <summary>
                <para>Specifies the current status of custom summary calculation.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.CustomSummaryProcess.Calculate">
            <summary>
                <para>Indicates that custom summary calculation is in progress. This means the event is raised for a specific data row containing the field value used to calculate the processed custom summary. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.CustomSummaryProcess.Finalize">
            <summary>
                <para>Indicates that the process of custom summary calculation is finished.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.CustomSummaryProcess.Start">
            <summary>
                <para>Indicates that the process of custom summary calculation is about to be started.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.DXErrorProvider.ErrorType">

            <summary>
                <para>Enumerates error icon types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Critical">
            <summary>
                <para>The 'Critical Error' icon: 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Default">
            <summary>
                <para>The 'Critical Error' icon: 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Information">
            <summary>
                <para>The 'Information' icon: 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.None">
            <summary>
                <para>Indicates that no error is associated with an editor or a cell.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User1">
            <summary>
                <para>Reserved for future use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User2">
            <summary>
                <para>Reserved for future use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User3">
            <summary>
                <para>Reserved for future use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User4">
            <summary>
                <para>Reserved for future use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User5">
            <summary>
                <para>Reserved for future use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User6">
            <summary>
                <para>Reserved for future use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User7">
            <summary>
                <para>Reserved for future use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User8">
            <summary>
                <para>Reserved for future use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User9">
            <summary>
                <para>Reserved for future use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Warning">
            <summary>
                <para>The 'Warning' icon: 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Services.IProgressIndicationService">

            <summary>
                <para>Exposes functionality that enables you to display progress indicator for time-consuming operations.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.IProgressIndicationService.Begin(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Initializes and displays a progress indicator.
</para>
            </summary>
            <param name="displayName">
		A string indicating what action is currently performed

            </param>
            <param name="minProgress">
		An integer specifying the minimum indicator value.

            </param>
            <param name="maxProgress">
		An integer specifying the maximum indicator value.

            </param>
            <param name="currentProgress">
		An integer specifying the current indicator value.

            </param>


        </member>
        <member name="M:DevExpress.Services.IProgressIndicationService.End">
            <summary>
                <para>Finalizes progress indication.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Services.IProgressIndicationService.SetProgress(System.Int32)">
            <summary>
                <para>Modifies the indicator value to track progress.

</para>
            </summary>
            <param name="currentProgress">
		An integer that is the value indicating the current progress.


            </param>


        </member>
        <member name="T:DevExpress.Data.ColumnSortOrder">

            <summary>
                <para>Lists values specifying the sort orders.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.ColumnSortOrder.Ascending">
            <summary>
                <para>Sorts the column in ascending order.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.ColumnSortOrder.Descending">
            <summary>
                <para>Sorts the columns in descending order.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.ColumnSortOrder.None">
            <summary>
                <para>No sorting is applied to a column.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.CriteriaOperator">

            <summary>
                <para>Provides the abstract (<b>MustInherit</b> in Visual Basic) base class for criteria operators.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Returns the expression which groups the specified operands with logical AND.
</para>
            </summary>
            <param name="operands">
		A list of operands to be grouped.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical AND.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the expression which groups two operands with logical AND.
</para>
            </summary>
            <param name="left">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which is the first operand.


            </param>
            <param name="right">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which is the second operand.


            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object, which is an expression which groups two operands with logical AND.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Returns the expression which groups the specified operands with logical AND.
</para>
            </summary>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that specify operands.


            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which is the expression which groups the specified operands with logical AND.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Clone(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a copy of the specified <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object.
</para>
            </summary>
            <param name="origin">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object to clone.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object, which is an exact copy of the specified object. <b>null</b> (<b>Nothing</b> in Visual Basic) if the specified object is null reference.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Clone(DevExpress.Data.Filtering.OperandProperty)">
            <summary>
                <para>Creates a copy of the specified <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object.
</para>
            </summary>
            <param name="origin">
		An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object to clone.

            </param>
            <returns>An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object, which is an exact copy of the specified object. <b>null</b> (<b>Nothing</b> in Visual Basic) if the specified object is a null reference.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.CriterionEquals(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="left">
		 [To be supplied] 
            </param>
            <param name="right">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.CriteriaOperator.CustomFunctionCount">
            <summary>
                <para>Returns the number of custom functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions"/> method calls. 

</para>
            </summary>
            <value>An integer value which specifies the number of elements in a collection returned by the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions"/> function. 
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunction(System.String)">
            <summary>
                <para>Searches custom functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions"/> method calls for a function with a specified name.
</para>
            </summary>
            <param name="functionName">
		The name of a custom function to search. You specify a custom function's name by implementing the <see cref="P:DevExpress.Data.Filtering.ICustomFunctionOperator.Name"/> property.

            </param>
            <returns>An <a href="ms-xhelp:///?Id=SLT%3aDevExpress.Data.Filtering.ICustomFunctionOperator">ICustomFunctionOperator</a> object that corresponds to the <i>functionName</i>, if found; otherwise, <b>null</b> (<b>Nothing</b> in Visual Basic).
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions">
            <summary>
                <para>Returns custom functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions"/> method calls.
</para>
            </summary>
            <returns>A CustomFunctionCollection object containing all custom functions registered via the methods mentioned above.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current CriteriaOperator object.
</para>
            </summary>
            <returns>An integer value that is the hash code for the current object.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.IsNotNull">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.IsNull">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.LegacyToString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the string representation of the criterion defined by the specified CriteriaOperator.
</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object, that is the criterion to convert to its string representation.


            </param>
            <returns>A string representation of the criterion defined by the specified CriteriaOperator.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.LegacyToString">
            <summary>
                <para>Returns the string representation of the criterion defined by the current CriteriaOperator.
</para>
            </summary>
            <returns>A string representation of the criterion defined by the current <b>CriteriaOperator</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Not">
            <summary>
                <para>Returns an instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> that represents the criterion resulting from the logical inversion of the criterion the current CriteriaOperator represents.
</para>
            </summary>
            <returns>An instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> that represents the criterion resulting from the logical inversion of the criterion the current CriteriaOperator represents.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the expression which groups two operands with logical OR.
</para>
            </summary>
            <param name="left">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which is the first operand.


            </param>
            <param name="right">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which is the second operand.


            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which is the expression which groups two operands with logical OR.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Returns the expression which groups the specified operands with logical OR.
</para>
            </summary>
            <param name="operands">
		A list of operands to be grouped.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which is the expression which groups the specified operands with logical OR.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Returns the expression which groups the specified operands with logical OR.
</para>
            </summary>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that specify operands.


            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which is the expression which groups the specified operands with logical OR.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Parse(System.String,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified string, specifying an expression, to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.
</para>
            </summary>
            <param name="stringCriteria">
		A <see cref="T:System.String"/> value, that is the expression to convert.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in <i>criteria</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Parse(System.String,System.Object[])">
            <summary>
                <para>Converts the specified string, specifying an expression, to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.
</para>
            </summary>
            <param name="criteria">
		A <see cref="T:System.String"/> value, that is the expression to convert.

            </param>
            <param name="parameters">
		The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in <i>criteria</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ParseList(System.String,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified string representation of expressions that are divided by a semicolon into their <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents.

</para>
            </summary>
            <param name="criteriaList">
		A <see cref="T:System.String"/> value that is the expressions to convert. The expressions are divided by a semicolon.


            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents to the expressions contained in <i>criteriaList</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ParseList(System.String,System.Object[])">
            <summary>
                <para>Converts the specified string representation of expressions that are divided by a semicolon into their <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents.

</para>
            </summary>
            <param name="criteriaList">
		A <see cref="T:System.String"/> value that is the expressions to convert. The expressions are divided by a semicolon.


            </param>
            <param name="parameters">
		The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents to the expressions contained in <i>criteriaList</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)">
            <summary>
                <para>Registers a specified custom function to use in any CriteriaOperator-based criteria in your application.
</para>
            </summary>
            <param name="customFunction">
		An <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> object specifying a custom function to register.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Registers specified custom functions to use in any CriteriaOperator-based criteria in your application.
</para>
            </summary>
            <param name="customFunctions">
		A collection of <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> objects specifying custom functions to register.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToBasicStyleString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that is the expression to convert.


            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are marked by a question mark character in the resulting string.



            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToBasicStyleString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that is the expression to convert.


            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToCStyleString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified expression into its equivalent string in C# style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that is the expression to convert.


            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are marked by a question mark character in the result string.


            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToCStyleString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Converts the specified expression into its equivalent string in C# style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are marked by question mark character in the result string.

            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString">
            <summary>
                <para>Converts the current expression into its VB equivalent string.

</para>
            </summary>
            <returns>A string representation of this expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that is the expression to convert.


            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.TryParse(System.String,System.Object[])">
            <summary>
                <para>Tries to convert the specified string representation of an expression to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:System.String"/> value that is the expression to convert.


            </param>
            <param name="parameters">
		The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in <i>criteria</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.UnregisterCustomFunction(System.String)">
            <summary>
                <para>Unregisters a custom function with a specified name from use in any CriteriaOperator-based criteria in your application.
</para>
            </summary>
            <param name="functionName">
		The name of a custom function to unregister.

            </param>
            <returns><b>true</b> if a custom function whose name matches the <i>functionName</i> has successfully been removed from a collection returned by the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions"/> function; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.UnregisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)">
            <summary>
                <para>Unregisters a specified custom function from use in any CriteriaOperator-based criteria in your application.
</para>
            </summary>
            <param name="customFunction">
		An <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> object instance specifying a custom function to unregister.

            </param>
            <returns><b>true</b> if the <i>customFunction</i> has successfully been removed from a collection returned by the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions"/> function; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="E:DevExpress.Data.Filtering.CriteriaOperator.UserValueParse">
            <summary>
                <para>Occurs when restoring a serialized criteria operator that references a user object.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.Filtering.CriteriaOperator.UserValueToString">
            <summary>
                <para>Occurs when serializing a criteria operator that references a user object.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraGrid.ColumnGroupInterval">

            <summary>
                <para>Lists the values that specify how the data rows are combined into groups when in grouping mode.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Alphabetical">
            <summary>
                <para>Combines column values into categories according to the character that the values start with.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Date">
            <summary>
                <para>This option is in effect only for columns that store date/time values. 

<para>
Column values are grouped by the date part. The time part of the values is ignored.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateMonth">
            <summary>
                <para>This option is in effect only for columns that store date/time values.
<para>
Column values are grouped by the month part. Examples of groups: <b>January</b>, <b>February</b>, <b>March</b> (the actual names of the months are determined by the current culture).
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateRange">
            <summary>
                <para>This option is in effect only for columns that store date/time values. 
<para>
Rows are grouped into the following groups according to their date value as compared with the current system date: "Today", "Tomorrow", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Next Week", "Two Weeks Away", "Three Weeks Away", "Next Month", "Beyond Next Month", "Yesterday", "Last Week", "Two Weeks Ago", "Three Weeks Ago", "Last Month", "Older".
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateYear">
            <summary>
                <para>This option is in effect only for columns that store date/time values.
<para>
Column values are grouped by the year part. Examples of such groups: 2003, 2004, 2005.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Default">
            <summary>
                <para>In regular binding mode, for columns which store date/time values, this option is the same as the <see cref="F:DevExpress.XtraGrid.ColumnGroupInterval.Date"/> option. For non date/time columns this option is the same as the <see cref="F:DevExpress.XtraGrid.ColumnGroupInterval.Value"/> option.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DisplayText">
            <summary>
                <para>Rows are grouped by cells' display values.

<para>
In specific instances, cells can have different edit values, but the same display value. To combine these rows into the same group, use the <b>DisplayText</b> group mode.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Value">
            <summary>
                <para>Rows are grouped by their values (the entire values of each row in a group have to match). The number of groups matches the number of unique values within the grouping column. 

<para>
Note that <see cref="T:System.DateTime"/> objects which have the same date portion but different time portions are treated as unique values (each has it's own group).
</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraGrid.ColumnSortMode">

            <summary>
                <para>Lists the values that specify how a column's data should be sorted.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.Custom">
            <summary>
                <para>Enables custom sorting via the <see cref="E:DevExpress.Xpf.Grid.GridControl.CustomColumnSort"/> event.

<para>
Enables custom grouping of the rows when grouping is applied against the current column via the <see cref="E:DevExpress.Xpf.Grid.GridControl.CustomColumnGroup"/> event.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.Default">
            <summary>
                <para>Sorts data according to the type of the editor assigned to a column. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.DisplayText">
            <summary>
                <para>Sorts data by the text displayed within a column's cells. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.Value">
            <summary>
                <para>Sorts data by edit values of a column (these are synchronized with the values in a bound data source). 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.SummaryItemType">

            <summary>
                <para>Lists values that specify the aggregate function types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Average">
            <summary>
                <para>The average value of a column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Count">
            <summary>
                <para>Calculates the number of records.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Custom">
            <summary>
                <para>Specifies whether calculations should be performed manually using a specially designed event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Max">
            <summary>
                <para>The maximum value in a column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Min">
            <summary>
                <para>The minimum value in a column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.None">
            <summary>
                <para>Disables summary value calculation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Sum">
            <summary>
                <para>The sum of all values in a column.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.AfterCheckWordEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.AfterCheckWordEventHandler.Invoke(System.Object,DevExpress.XtraSpellChecker.AfterCheckWordEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.
</para>
            </summary>
            <param name="sender">
		An object that triggers the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs"/> object that provides data for the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.

            </param>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.#ctor(System.Object,System.String,System.String,DevExpress.XtraSpellChecker.SpellCheckOperation,DevExpress.XtraSpellChecker.Parser.Position)">
            <summary>
                <para>Initializes a new AfterCheckWordEventArgs class instance with specified settings.
</para>
            </summary>
            <param name="editControl">
		An object representing the control being checked.


            </param>
            <param name="originalWord">
		A string representing a word before the check. 


            </param>
            <param name="changedWord">
		A string representing the word modified after spell check.


            </param>
            <param name="result">
		A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckOperation"/> enumeration value, representing the operation type. 

            </param>
            <param name="startPosition">
		A <see cref="T:DevExpress.XtraSpellChecker.Parser.Position"/> object, representing the position in the text where the checked word begins.

            </param>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.ChangedWord">
            <summary>
                <para>Gets the word that replaced the former one after the spelling check is performed.

</para>
            </summary>
            <value>A string, representing the word modified after spelling check.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.EditControl">
            <summary>
                <para>Gets the control being checked.
</para>
            </summary>
            <value>An object representing a control being checked.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.Operation">
            <summary>
                <para>Gets the type of operation performed with the word in a spell check.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckOperation"/> enumeration value, representing the operation type.

</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.OriginalWord">
            <summary>
                <para>Gets the word before spell check is performed.


</para>
            </summary>
            <value>A string representing a word before the check.


</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.StartPosition">
            <summary>
                <para>Gets the position of a checked word in a text.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.Parser.Position"/> object, representing the position in a text where the checked word begins. 

</value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.WordAddedEventHandler">

            <summary>
                <para>Methods that will handle the <b>WordAdded</b> event.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.WordAddedEventHandler.Invoke(System.Object,DevExpress.XtraSpellChecker.WordAddedEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.WordAdded"/> event.
</para>
            </summary>
            <param name="sender">
		An object of any type that triggers the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.WordAdded"/> event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraSpellChecker.WordAddedEventArgs"/> object that provides data for the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.WordAdded"/> event.

            </param>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.WordAddedEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.WordAdded"/> events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.WordAddedEventArgs.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the WordAddedEventArgs class with specified settings. 


</para>
            </summary>
            <param name="word">
		A word that has been added to the custom dictionary.

            </param>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.WordAddedEventArgs.Word">
            <summary>
                <para>Gets a word added to the dictionary.
</para>
            </summary>
            <value>A string representing a word added to the dictionary.
</value>


        </member>
        <member name="T:DevExpress.Data.UnboundColumnType">

            <summary>
                <para>Contains values that specify the data type and binding mode of columns.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Boolean">
            <summary>
                <para>Indicates that the column is unbound and it contains Boolean values (the <see cref="T:System.Boolean"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Bound">
            <summary>
                <para>Indicates that the column is bound to a field in the control's underlying data source. The type of data this column contains is determined by the bound field.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.DateTime">
            <summary>
                <para>Indicates that the column is unbound and it contains date/time values (the <see cref="T:System.DateTime"/> type). 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Decimal">
            <summary>
                <para>Indicates that the column is unbound and it contains decimal values (the <see cref="T:System.Decimal"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Integer">
            <summary>
                <para>Indicates that the column is unbound and it contains integer values (the <see cref="T:System.Int32"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Object">
            <summary>
                <para>Indicates that the column is unbound and it contains values of any type. A <see cref="T:DevExpress.Xpf.Editors.TextEdit"/> editor is assigned for the in-place editing of such a column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.String">
            <summary>
                <para>Indicates that the column is unbound, and it contains string values (the <see cref="T:System.String"/> type). 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Commands.Command">

            <summary>
                <para>Serves as a base for classes that present commands.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Commands.Command.CanExecute">
            <summary>
                <para>Determines whether the command can execute in its current state.
</para>
            </summary>
            <returns><b>true</b> if the command can execute; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.CommandSourceType">
            <summary>
                <para>Gets or sets the type of the object which invokes the command.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Commands.CommandSourceType"/> enumeration value, specifying the object type.
</value>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.CreateDefaultCommandUIState">
            <summary>
                <para>Creates an object defining the command state for the current command. 
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface that defines the command state.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.Description">
            <summary>
                <para>Gets the text description of a command.
</para>
            </summary>
            <value>A string containing the command's description.
</value>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.Execute">
            <summary>
                <para>Executes the command on the current command target.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.ForceExecute(DevExpress.Utils.Commands.ICommandUIState)">
            <summary>
                <para>Performs a command action, regardless of a command state.
</para>
            </summary>
            <param name="state">
		An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface defining the command state.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.HideDisabled">
            <summary>
                <para>Gets or sets whether the object to which the command is attached is hidden, if the command is disabled.
</para>
            </summary>
            <value><b>true</b> to hide the object with a disabled command; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.Image">
            <summary>
                <para>Gets an image associated with the command.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object representing the associated image.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.LargeImage">
            <summary>
                <para>Gets a larger image associated with the command.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object representing the associated image.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.MenuCaption">
            <summary>
                <para>Gets the menu caption associated with the current command.
</para>
            </summary>
            <value>A string representing the text of the menu item.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.ShowsModalDialog">
            <summary>
                <para>Indicates whether a command invokes a modal dialog when executing.
</para>
            </summary>
            <value><b>true</b> if a modal dialog is displayed while executing the command; otherwise, <b>false</b>. In base class it returns <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.UpdateUIState(DevExpress.Utils.Commands.ICommandUIState)">
            <summary>
                <para>Updates the command state.
</para>
            </summary>
            <param name="state">
		An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface defining the state of a command.

            </param>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.SpellCheckOperation">

            <summary>
                <para>Lists implemented spell checker operations.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.AddToDictionary">
            <summary>
                <para>Replaces a word in the text with the user input, and adds the replacement to the custom dictionary.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Cancel">
            <summary>
                <para>Stops the spell check operation, resets the checking strategy and closes the spelling form. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Change">
            <summary>
                <para>Replaces the current word in the text being checked with the suggested word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.ChangeAll">
            <summary>
                <para>Replaces all occurences of the current word in the text being checked with the suggested word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Custom">
            <summary>
                <para>This enumeration member is intended for internal use only.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Delete">
            <summary>
                <para>Deletes the current word from the text.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Ignore">
            <summary>
                <para>Disregards the current word and proceeds to the next one.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.IgnoreAll">
            <summary>
                <para>Disregards the current word and all its occurences in the text.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.None">
            <summary>
                <para>This enumeration member is intended for internal use only. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Options">
            <summary>
                <para>Invokes the spelling options form. After closing the form, re-checks the text with the new spelling options, starting with the last checked word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Recheck">
            <summary>
                <para>Forces the spell checker to check the last checked word again.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.SilentChange">
            <summary>
                <para>Replaces the current word in the text being checked with the suggested word. For internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.SilentIgnore">
            <summary>
                <para>Disregards the current word and proceeds to the next one. For internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Undo">
            <summary>
                <para>Cancels the effect of the last operation, restoring the text to its previous state.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.SpellCheckMode">

            <summary>
                <para>Lists available operation modes of the spell checker.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckMode.AsYouType">
            <summary>
                <para>Starts spell check when you finish typing the word or moves the cursor after changing it.This operation mode underlines the misspelled word and allows you to select a suggestion from the context menu, invoked by right-clicking the word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckMode.OnDemand">
            <summary>
                <para>Starts spell check and invokes the spelling form for making corrections.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.SelectionChangedEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Xpf.Grid.GridViewBase.SelectionChanged"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.SelectionChangedEventHandler.Invoke(System.Object,DevExpress.Data.SelectionChangedEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Xpf.Grid.GridViewBase.SelectionChanged"/> event.
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.SelectionChangedEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Data.SelectionChangedEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Xpf.Grid.GridViewBase.SelectionChanged"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.SelectionChangedEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the SelectionChangedEventArgs class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.SelectionChangedEventArgs.#ctor(DevExpress.Data.CollectionChangeAction,System.Int32)">
            <summary>
                <para>Initializes a new instance of the SelectionChangedEventArgs class.
</para>
            </summary>
            <param name="action">
		A <see cref="T:System.ComponentModel.CollectionChangeAction"/> enumeration value that specifies how the selection has been changed. This value is assigned to the <see cref="P:DevExpress.Data.SelectionChangedEventArgs.Action"/> property.

            </param>
            <param name="controllerRow">
		An integer value that specifies the handle of the row whose selected state has been changed. This value is assigned to the <see cref="P:DevExpress.Data.SelectionChangedEventArgs.ControllerRow"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.SelectionChangedEventArgs.Action">
            <summary>
                <para>Gets an action which indicates how the selection has been changed.
</para>
            </summary>
            <value>A <see cref="T:System.ComponentModel.CollectionChangeAction"/> enumeration value that specifies how the selection has been changed.
</value>


        </member>
        <member name="P:DevExpress.Data.SelectionChangedEventArgs.ControllerRow">
            <summary>
                <para>Identifies the row whose selected state has been changed.
</para>
            </summary>
            <value>An integer value that specifies the handle of the row whose selected state has been changed.
</value>


        </member>
        <member name="T:DevExpress.Utils.DefaultBoolean">

            <summary>
                <para>Lists values which specify the validity of a condition (indicates whether the condition is true or false).
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.DefaultBoolean.Default">
            <summary>
                <para>The value is determined by a control's current setting. The default value is automatically set for a control if an end-user doesn't specify a value.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.DefaultBoolean.False">
            <summary>
                <para>Corresponds to a Boolean value of <b>false</b>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.DefaultBoolean.True">
            <summary>
                <para>Corresponds to a Boolean value of <b>true</b>.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryExistEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Xpf.Grid.GridControl.CustomSummaryExists"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryExistEventHandler.Invoke(System.Object,DevExpress.Data.CustomSummaryExistEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Xpf.Grid.GridControl.CustomSummaryExists"/> event.

</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.CustomSummaryExistEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryExistEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Xpf.Grid.GridControl.CustomSummaryExists"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryExistEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
            <summary>
                <para>Initializes a new instance of the CustomSummaryExistEventArgs class with specified settings.
</para>
            </summary>
            <param name="groupRowHandle">
		An integer value specifying the handle of the group row whose summary value is about to be calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupRowHandle"/> property.

            </param>
            <param name="groupLevel">
		An integer value specifying the zero-based nesting level of the processed group. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupLevel"/> property.

            </param>
            <param name="item">
		An object which represents the summary item whose value is about to be calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.Item"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.Exists">
            <summary>
                <para>Gets or sets whether the summary value should be calculated and displayed.
</para>
            </summary>
            <value><b>true</b> to calculate and display the summary value; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupLevel">
            <summary>
                <para>Gets the nesting level of a group row whose summary value is being calculated.
</para>
            </summary>
            <value>An integer value that specifies the zero-based nesting level of the processed group row.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupRowHandle">
            <summary>
                <para>Gets the handle of a group row whose summary value is calculated. 
</para>
            </summary>
            <value>An integer value specifying the handle of the group row whose summary value is calculated.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.IsGroupSummary">
            <summary>
                <para>Gets whether a group summary value is calculated.
</para>
            </summary>
            <value><b>true</b> if a group summary value is calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.IsTotalSummary">
            <summary>
                <para>Gets whether a total summary value is calculated.
</para>
            </summary>
            <value><b>true</b> if a total summary value is calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.Item">
            <summary>
                <para>Gets a summary item whose value is calculated.
</para>
            </summary>
            <value>An object representing a summary item whose value is calculated.
</value>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Xpf.Grid.GridControl.CustomSummary"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventHandler.Invoke(System.Object,DevExpress.Data.CustomSummaryEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Xpf.Grid.GridControl.CustomSummary"/> event.
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.CustomSummaryEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Xpf.Grid.GridControl.CustomSummary"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the CustomSummaryEventArgs class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.#ctor(System.Int32,System.Object,System.Object,System.Int32,DevExpress.Data.CustomSummaryProcess,System.Object,System.Int32)">
            <summary>
                <para>Initializes a new instance of the CustomSummaryEventArgs class.
</para>
            </summary>
            <param name="controllerRow">
		An integer value, identifying the processed row by its handle. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.RowHandle"/> property.

            </param>
            <param name="totalValue">
		An object, representing the custom calculated summary value. This value is assigned to the  <see cref="P:DevExpress.Data.CustomSummaryEventArgs.TotalValue"/> property.

            </param>
            <param name="fieldValue">
		An object, representing the processed field value. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.FieldValue"/> property.

            </param>
            <param name="groupRowHandle">
		An integer value, identifying the group row whose child data rows are involved in summary calculation. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.GroupRowHandle"/> property.

            </param>
            <param name="summaryProcess">
		A <see cref="T:DevExpress.Data.CustomSummaryProcess"/> enumeration value, identifying the current calculation stage. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.SummaryProcess"/> property.

            </param>
            <param name="item">
		An object, representing the summary item whose value is being calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.Item"/> property.

            </param>
            <param name="groupLevel">
		An integer value indicating the nested group level of the processed row. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.GroupLevel"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.FieldValue">
            <summary>
                <para>Gets the processed field value.
</para>
            </summary>
            <value>An object, representing the processed field value.
</value>


        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.GetGroupSummary(System.Int32,System.Object)">
            <summary>
                <para>Returns the specified group summary value displayed within the specified group row.
</para>
            </summary>
            <param name="groupRowHandle">
		An integer value that identifies the group row by its handle.

            </param>
            <param name="summaryItem">
		A <see cref="T:DevExpress.Xpf.Grid.GridSummaryItem"/> object that is the group summary item.


            </param>
            <returns>An object that is the specified group summary value displayed within the specified group row.

</returns>


        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.GetValue(System.String)">
            <summary>
                <para>Returns the specified field's value.
</para>
            </summary>
            <param name="fieldName">
		A <see cref="T:System.String"/> value that identifies the field whose value must be returned.

            </param>
            <returns>An object that represents the specified field value.
</returns>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.GroupLevel">
            <summary>
                <para>Gets the nested level of the group whose summary value is being calculated.
</para>
            </summary>
            <value>An integer value representing the zero-based nested level of the processed group.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.GroupRowHandle">
            <summary>
                <para>Gets the handle of a group row whose child data rows are involved in summary calculation.
</para>
            </summary>
            <value>An integer value that specifies the group row's handle. <b>0</b> when calculating a total summary value.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.IsGroupSummary">
            <summary>
                <para>Gets whether a group summary value is being calculated.
</para>
            </summary>
            <value><b>true</b> if a group summary value is being calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.IsTotalSummary">
            <summary>
                <para>Gets whether a total summary value is being calculated.
</para>
            </summary>
            <value><b>true</b> if a total summary value is being calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.Item">
            <summary>
                <para>Gets a summary item whose value is being calculated.
</para>
            </summary>
            <value>An object that represents a summary item whose value is being calculated.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.Row">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.RowHandle">
            <summary>
                <para>Gets the processed row's handle.
</para>
            </summary>
            <value>An integer value that identifies the processed data row by its handle.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.SummaryProcess">
            <summary>
                <para>Gets a value indicating the current calculation stage.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.CustomSummaryProcess"/> enumeration value, identifying the current calculation stage.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.TotalValue">
            <summary>
                <para>Gets or sets the total or group summary value.
</para>
            </summary>
            <value>An object representing the total or group summary value.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.TotalValueReady">
            <summary>
                <para>Gets or sets whether the Calculation stage of the custom summary calculation process should be skipped.
</para>
            </summary>
            <value><b>true</b> to skip the Calculation stage of the custom summary calculation process; otherwise, <b>false</b>.
</value>


        </member>
    </members>
</doc>
